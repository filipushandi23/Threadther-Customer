
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSCustomer", targetNamespace = "http://WS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSCustomer {


    /**
     * 
     * @param firstName
     * @param lastName
     * @param profilePicture
     * @param password
     * @param phoneNumber
     * @param birthDate
     * @param email
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://WS/", className = "services.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://WS/", className = "services.RegisterResponse")
    @Action(input = "http://WS/WSCustomer/registerRequest", output = "http://WS/WSCustomer/registerResponse")
    public Boolean register(
        @WebParam(name = "first_name", targetNamespace = "")
        String firstName,
        @WebParam(name = "last_name", targetNamespace = "")
        String lastName,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "profile_picture", targetNamespace = "")
        String profilePicture,
        @WebParam(name = "phone_number", targetNamespace = "")
        Integer phoneNumber,
        @WebParam(name = "birth_date", targetNamespace = "")
        XMLGregorianCalendar birthDate);

    /**
     * 
     * @param email
     * @return
     *     returns services.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://WS/", className = "services.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://WS/", className = "services.GetUserResponse")
    @Action(input = "http://WS/WSCustomer/getUserRequest", output = "http://WS/WSCustomer/getUserResponse")
    public User getUser(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://WS/", className = "services.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://WS/", className = "services.UpdateUserResponse")
    @Action(input = "http://WS/WSCustomer/updateUserRequest", output = "http://WS/WSCustomer/updateUserResponse")
    public boolean updateUser(
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://WS/", className = "services.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://WS/", className = "services.LoginResponse")
    @Action(input = "http://WS/WSCustomer/loginRequest", output = "http://WS/WSCustomer/loginResponse")
    public boolean login(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<services.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getShowingMovies", targetNamespace = "http://WS/", className = "services.GetShowingMovies")
    @ResponseWrapper(localName = "getShowingMoviesResponse", targetNamespace = "http://WS/", className = "services.GetShowingMoviesResponse")
    @Action(input = "http://WS/WSCustomer/getShowingMoviesRequest", output = "http://WS/WSCustomer/getShowingMoviesResponse")
    public List<Movie> getShowingMovies();

    /**
     * 
     * @param phone
     * @param user
     * @param birthDate
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertAsCustomer", targetNamespace = "http://WS/", className = "services.InsertAsCustomer")
    @ResponseWrapper(localName = "insertAsCustomerResponse", targetNamespace = "http://WS/", className = "services.InsertAsCustomerResponse")
    @Action(input = "http://WS/WSCustomer/insertAsCustomerRequest", output = "http://WS/WSCustomer/insertAsCustomerResponse")
    public boolean insertAsCustomer(
        @WebParam(name = "user", targetNamespace = "")
        User user,
        @WebParam(name = "phone", targetNamespace = "")
        int phone,
        @WebParam(name = "birthDate", targetNamespace = "")
        XMLGregorianCalendar birthDate);

    /**
     * 
     * @param balance
     * @param custId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "topUpSaldo", targetNamespace = "http://WS/", className = "services.TopUpSaldo")
    @ResponseWrapper(localName = "topUpSaldoResponse", targetNamespace = "http://WS/", className = "services.TopUpSaldoResponse")
    @Action(input = "http://WS/WSCustomer/topUpSaldoRequest", output = "http://WS/WSCustomer/topUpSaldoResponse")
    public boolean topUpSaldo(
        @WebParam(name = "custId", targetNamespace = "")
        String custId,
        @WebParam(name = "balance", targetNamespace = "")
        int balance);

    /**
     * 
     * @param movieId
     * @return
     *     returns services.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMovieById", targetNamespace = "http://WS/", className = "services.GetMovieById")
    @ResponseWrapper(localName = "getMovieByIdResponse", targetNamespace = "http://WS/", className = "services.GetMovieByIdResponse")
    @Action(input = "http://WS/WSCustomer/getMovieByIdRequest", output = "http://WS/WSCustomer/getMovieByIdResponse")
    public Movie getMovieById(
        @WebParam(name = "movieId", targetNamespace = "")
        String movieId);

    /**
     * 
     * @param movieId
     * @return
     *     returns java.util.List<services.Schedule>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllScheduleByMovieId", targetNamespace = "http://WS/", className = "services.GetAllScheduleByMovieId")
    @ResponseWrapper(localName = "getAllScheduleByMovieIdResponse", targetNamespace = "http://WS/", className = "services.GetAllScheduleByMovieIdResponse")
    @Action(input = "http://WS/WSCustomer/getAllScheduleByMovieIdRequest", output = "http://WS/WSCustomer/getAllScheduleByMovieIdResponse")
    public List<Schedule> getAllScheduleByMovieId(
        @WebParam(name = "movieId", targetNamespace = "")
        int movieId);

    /**
     * 
     * @return
     *     returns java.util.List<services.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComingSoonMovies", targetNamespace = "http://WS/", className = "services.GetComingSoonMovies")
    @ResponseWrapper(localName = "getComingSoonMoviesResponse", targetNamespace = "http://WS/", className = "services.GetComingSoonMoviesResponse")
    @Action(input = "http://WS/WSCustomer/getComingSoonMoviesRequest", output = "http://WS/WSCustomer/getComingSoonMoviesResponse")
    public List<Movie> getComingSoonMovies();

    /**
     * 
     * @param studioNumber
     * @return
     *     returns java.util.List<services.Seat>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSeatByStudioNumber", targetNamespace = "http://WS/", className = "services.GetSeatByStudioNumber")
    @ResponseWrapper(localName = "getSeatByStudioNumberResponse", targetNamespace = "http://WS/", className = "services.GetSeatByStudioNumberResponse")
    @Action(input = "http://WS/WSCustomer/getSeatByStudioNumberRequest", output = "http://WS/WSCustomer/getSeatByStudioNumberResponse")
    public List<Seat> getSeatByStudioNumber(
        @WebParam(name = "studioNumber", targetNamespace = "")
        int studioNumber);

    /**
     * 
     * @param studioNumber
     * @return
     *     returns services.Studio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudioByStudioNumber", targetNamespace = "http://WS/", className = "services.GetStudioByStudioNumber")
    @ResponseWrapper(localName = "getStudioByStudioNumberResponse", targetNamespace = "http://WS/", className = "services.GetStudioByStudioNumberResponse")
    @Action(input = "http://WS/WSCustomer/getStudioByStudioNumberRequest", output = "http://WS/WSCustomer/getStudioByStudioNumberResponse")
    public Studio getStudioByStudioNumber(
        @WebParam(name = "studioNumber", targetNamespace = "")
        String studioNumber);

}
